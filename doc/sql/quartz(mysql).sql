drop TABLE qrtz_scheduler_state;
drop TABLE qrtz_fired_triggers;
drop TABLE qrtz_cron_triggers;
drop TABLE qrtz_simple_triggers;
drop TABLE qrtz_simprop_triggers;
drop TABLE qrtz_blob_triggers;
drop TABLE qrtz_triggers;
drop TABLE qrtz_job_details;
drop TABLE qrtz_locks;
drop TABLE qrtz_calendars;
drop TABLE qrtz_paused_trigger_grps;


# 建表顺序 1  以 Blob 类型存储 Quartz 的 Calendar 信息  
CREATE TABLE `qrtz_calendars` (
  `SCHED_NAME` VARCHAR(120) NOT NULL,
  `CALENDAR_NAME` VARCHAR(200) NOT NULL,
  `CALENDAR` BLOB NOT NULL,
  PRIMARY KEY (`SCHED_NAME`,`CALENDAR_NAME`)
) ENGINE=INNODB DEFAULT CHARSET=utf8;

# 建表顺序 2  存储程序的悲观锁的信息(假如使用了悲观锁)  
CREATE TABLE `qrtz_locks` (
  `SCHED_NAME` VARCHAR(120) NOT NULL ,
  `LOCK_NAME` VARCHAR(40) NOT NULL ,
  PRIMARY KEY (`SCHED_NAME`,`LOCK_NAME`)
) ENGINE=INNODB DEFAULT CHARSET=utf8;




# 建表顺序 3
CREATE TABLE `qrtz_paused_trigger_grps` (
  `SCHED_NAME` VARCHAR(120) NOT NULL,
  `TRIGGER_GROUP` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`SCHED_NAME`,`TRIGGER_GROUP`)
) ENGINE=INNODB DEFAULT CHARSET=utf8;




# 建表顺序 4  存储与已触发的 Trigger 相关的状态信息，以及相联 Job 的执行信息  
CREATE TABLE `qrtz_fired_triggers` (
  `SCHED_NAME` VARCHAR(120) NOT NULL COMMENT '方案名称',
  `ENTRY_ID` VARCHAR(95) NOT NULL  COMMENT '执行方案的 实体唯一编号',
  `TRIGGER_NAME` VARCHAR(200) NOT NULL COMMENT '定时器名称',
  `TRIGGER_GROUP` VARCHAR(200) NOT NULL  COMMENT '定时器分组',
  `INSTANCE_NAME` VARCHAR(200) NOT NULL COMMENT '执行定时器的设备实例名称',
  `FIRED_TIME` BIGINT(13) NOT NULL COMMENT  '触发时间',
  `SCHED_TIME` BIGINT(13) NOT NULL  COMMENT '下次出发时间',
  `PRIORITY` INT(11) NOT NULL COMMENT  '执行优先级',
  `STATE` VARCHAR(16) NOT NULL COMMENT '执行权限',
  `JOB_NAME` VARCHAR(200) DEFAULT NULL COMMENT '调度程序名称',
  `JOB_GROUP` VARCHAR(200) DEFAULT NULL COMMENT '调度程序名称',
  `IS_NONCONCURRENT` VARCHAR(1) DEFAULT NULL COMMENT '是否并发',
  `REQUESTS_RECOVERY` VARCHAR(1) DEFAULT NULL COMMENT '标记是否故障，是否需要回复',
  PRIMARY KEY (`SCHED_NAME`,`ENTRY_ID`),
  KEY `IDX_QRTZ_FT_TRIG_INST_NAME` (`SCHED_NAME`,`INSTANCE_NAME`),
  KEY `IDX_QRTZ_FT_INST_JOB_REQ_RCVRY` (`SCHED_NAME`,`INSTANCE_NAME`,`REQUESTS_RECOVERY`),
  KEY `IDX_QRTZ_FT_J_G` (`SCHED_NAME`,`JOB_NAME`,`JOB_GROUP`),
  KEY `IDX_QRTZ_FT_JG` (`SCHED_NAME`,`JOB_GROUP`),
  KEY `IDX_QRTZ_FT_T_G` (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`),
  KEY `IDX_QRTZ_FT_TG` (`SCHED_NAME`,`TRIGGER_GROUP`)
) ENGINE=INNODB DEFAULT CHARSET=utf8;



# 建表顺序 5
CREATE TABLE `qrtz_job_details` (
  `SCHED_NAME` VARCHAR(120) NOT NULL COMMENT '方案名称' ,
  `JOB_NAME` VARCHAR(200) NOT NULL  COMMENT '任务名称' ,
  `JOB_GROUP` VARCHAR(200) NOT NULL  COMMENT '任务分组' ,
  `DESCRIPTION` VARCHAR(250) DEFAULT NULL  COMMENT '任务描述' ,
  `JOB_CLASS_NAME` VARCHAR(250) NOT NULL  COMMENT '执行任务的javaclass类' ,
  `IS_DURABLE` VARCHAR(1) NOT NULL  COMMENT '是否持久化' ,
  `IS_NONCONCURRENT` VARCHAR(1) NOT NULL  COMMENT '是否并发' ,
  `IS_UPDATE_DATA` VARCHAR(1) NOT NULL  COMMENT '是否修改数据' ,
  `REQUESTS_RECOVERY` VARCHAR(1) NOT NULL  COMMENT '标记是否故障，是否需要回复' ,
  `JOB_DATA` BLOB  COMMENT '' ,
  PRIMARY KEY (`SCHED_NAME`,`JOB_NAME`,`JOB_GROUP`),
  KEY `IDX_QRTZ_J_REQ_RECOVERY` (`SCHED_NAME`,`REQUESTS_RECOVERY`),
  KEY `IDX_QRTZ_J_GRP` (`SCHED_NAME`,`JOB_GROUP`)
) ENGINE=INNODB DEFAULT CHARSET=utf8;



# 建表顺序 6  调度容器 状态信息记录表
CREATE TABLE `qrtz_scheduler_state` (
  `SCHED_NAME` VARCHAR(120) NOT NULL COMMENT '方案名称' ,
  `INSTANCE_NAME` VARCHAR(200) NOT NULL  COMMENT '实例名称' ,
  `LAST_CHECKIN_TIME` BIGINT(13) NOT NULL  COMMENT '最后执行时间' ,
  `CHECKIN_INTERVAL` BIGINT(13) NOT NULL  COMMENT '执行检查间隔' ,
  PRIMARY KEY (`SCHED_NAME`,`INSTANCE_NAME`)
) ENGINE=INNODB DEFAULT CHARSET=utf8;




# 建表顺序 7  定时器信息记录表     定时器的类型 cron代表 CronTriggerFactoryBean调用 ，simp 代表 SimpleTriggerFactoryBean 调用
CREATE TABLE `qrtz_triggers` (
  `SCHED_NAME` VARCHAR(120) NOT NULL COMMENT '方案名称，方案与定时任务是一对多的关系，可以说一个项目一个方法就够，但是一个项目的定时任务是多个',
  `TRIGGER_NAME` VARCHAR(200) NOT NULL COMMENT '定时任务具体名称',
  `TRIGGER_GROUP` VARCHAR(200) NOT NULL COMMENT '定时器分组',
  `JOB_NAME` VARCHAR(200) NOT NULL COMMENT  '调度任务名称',
  `JOB_GROUP` VARCHAR(200) NOT NULL  COMMENT '调度任务分组',
  `DESCRIPTION` VARCHAR(250) DEFAULT NULL COMMENT  '定时器的描述',
  `NEXT_FIRE_TIME` BIGINT(13) DEFAULT NULL COMMENT '下一次执行时间',
  `PREV_FIRE_TIME` BIGINT(13) DEFAULT NULL COMMENT  '上一次执行时间',
  `PRIORITY` INT(11) DEFAULT NULL COMMENT  '定时器的优先执行全选',
  `TRIGGER_STATE` VARCHAR(16) NOT NULL COMMENT '定时器的执行状态' ,
  `TRIGGER_TYPE` VARCHAR(8) NOT NULL COMMENT '定时器的类型',
  `START_TIME` BIGINT(13) NOT NULL COMMENT '定时器开始的执行时间',
  `END_TIME` BIGINT(13) DEFAULT NULL COMMENT  '定时器结束执行的时间，（看代码没有找到可配置的地方 ）',
  `CALENDAR_NAME` VARCHAR(200) DEFAULT NULL  COMMENT '日历名称（可能是可以指定时区）',
  `MISFIRE_INSTR` SMALLINT(2) DEFAULT NULL COMMENT '可能是是否启动的标识）',
  `JOB_DATA` BLOB,
  PRIMARY KEY (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`),
  KEY `IDX_QRTZ_T_J` (`SCHED_NAME`,`JOB_NAME`,`JOB_GROUP`),
  KEY `IDX_QRTZ_T_JG` (`SCHED_NAME`,`JOB_GROUP`),
  KEY `IDX_QRTZ_T_C` (`SCHED_NAME`,`CALENDAR_NAME`),
  KEY `IDX_QRTZ_T_G` (`SCHED_NAME`,`TRIGGER_GROUP`),
  KEY `IDX_QRTZ_T_STATE` (`SCHED_NAME`,`TRIGGER_STATE`),
  KEY `IDX_QRTZ_T_N_STATE` (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`,`TRIGGER_STATE`),
  KEY `IDX_QRTZ_T_N_G_STATE` (`SCHED_NAME`,`TRIGGER_GROUP`,`TRIGGER_STATE`),
  KEY `IDX_QRTZ_T_NEXT_FIRE_TIME` (`SCHED_NAME`,`NEXT_FIRE_TIME`),
  KEY `IDX_QRTZ_T_NFT_ST` (`SCHED_NAME`,`TRIGGER_STATE`,`NEXT_FIRE_TIME`),
  KEY `IDX_QRTZ_T_NFT_MISFIRE` (`SCHED_NAME`,`MISFIRE_INSTR`,`NEXT_FIRE_TIME`),
  KEY `IDX_QRTZ_T_NFT_ST_MISFIRE` (`SCHED_NAME`,`MISFIRE_INSTR`,`NEXT_FIRE_TIME`,`TRIGGER_STATE`),
  KEY `IDX_QRTZ_T_NFT_ST_MISFIRE_GRP` (`SCHED_NAME`,`MISFIRE_INSTR`,`NEXT_FIRE_TIME`,`TRIGGER_GROUP`,`TRIGGER_STATE`),
  CONSTRAINT `qrtz_triggers_ibfk_1` FOREIGN KEY (`SCHED_NAME`, `JOB_NAME`, `JOB_GROUP`) REFERENCES `qrtz_job_details` (`SCHED_NAME`, `JOB_NAME`, `JOB_GROUP`)
) ENGINE=INNODB DEFAULT CHARSET=utf8;




# 建表顺序 8
CREATE TABLE `qrtz_blob_triggers` (
  `SCHED_NAME` VARCHAR(120) NOT NULL,
  `TRIGGER_NAME` VARCHAR(200) NOT NULL,
  `TRIGGER_GROUP` VARCHAR(200) NOT NULL,
  `BLOB_DATA` BLOB,
  PRIMARY KEY (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`),
  KEY `SCHED_NAME` (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`),
  CONSTRAINT `qrtz_blob_triggers_ibfk_1` FOREIGN KEY (`SCHED_NAME`, `TRIGGER_NAME`, `TRIGGER_GROUP`) REFERENCES `qrtz_triggers` (`SCHED_NAME`, `TRIGGER_NAME`, `TRIGGER_GROUP`)
) ENGINE=INNODB DEFAULT CHARSET=utf8;




# 建表顺序 9    存储 Cron Trigger，包括 Cron 表达式和时区信息 
CREATE TABLE `qrtz_cron_triggers` (
  `SCHED_NAME` VARCHAR(120) NOT NULL  COMMENT '方案名称',
  `TRIGGER_NAME` VARCHAR(200) NOT NULL COMMENT '定时器名称',
  `TRIGGER_GROUP` VARCHAR(200) NOT NULL COMMENT '定时器分组',
  `CRON_EXPRESSION` VARCHAR(120) NOT NULL COMMENT '定时器运行时间表达式',
  `TIME_ZONE_ID` VARCHAR(80) DEFAULT NULL COMMENT ' 运行所用时区',
  PRIMARY KEY (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`),
  CONSTRAINT `qrtz_cron_triggers_ibfk_1` FOREIGN KEY (`SCHED_NAME`, `TRIGGER_NAME`, `TRIGGER_GROUP`) REFERENCES `qrtz_triggers` (`SCHED_NAME`, `TRIGGER_NAME`, `TRIGGER_GROUP`)
) ENGINE=INNODB DEFAULT CHARSET=utf8;








# 建表顺序 10
CREATE TABLE `qrtz_simple_triggers` (
  `SCHED_NAME` VARCHAR(120) NOT NULL,
  `TRIGGER_NAME` VARCHAR(200) NOT NULL,
  `TRIGGER_GROUP` VARCHAR(200) NOT NULL,
  `REPEAT_COUNT` BIGINT(7) NOT NULL,
  `REPEAT_INTERVAL` BIGINT(12) NOT NULL,
  `TIMES_TRIGGERED` BIGINT(10) NOT NULL,
  PRIMARY KEY (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`),
  CONSTRAINT `qrtz_simple_triggers_ibfk_1` FOREIGN KEY (`SCHED_NAME`, `TRIGGER_NAME`, `TRIGGER_GROUP`) REFERENCES `qrtz_triggers` (`SCHED_NAME`, `TRIGGER_NAME`, `TRIGGER_GROUP`)
) ENGINE=INNODB DEFAULT CHARSET=utf8;



# 建表顺序 11
CREATE TABLE `qrtz_simprop_triggers` (
  `SCHED_NAME` VARCHAR(120) NOT NULL,
  `TRIGGER_NAME` VARCHAR(200) NOT NULL,
  `TRIGGER_GROUP` VARCHAR(200) NOT NULL,
  `STR_PROP_1` VARCHAR(512) DEFAULT NULL,
  `STR_PROP_2` VARCHAR(512) DEFAULT NULL,
  `STR_PROP_3` VARCHAR(512) DEFAULT NULL,
  `INT_PROP_1` INT(11) DEFAULT NULL,
  `INT_PROP_2` INT(11) DEFAULT NULL,
  `LONG_PROP_1` BIGINT(20) DEFAULT NULL,
  `LONG_PROP_2` BIGINT(20) DEFAULT NULL,
  `DEC_PROP_1` DECIMAL(13,4) DEFAULT NULL,
  `DEC_PROP_2` DECIMAL(13,4) DEFAULT NULL,
  `BOOL_PROP_1` VARCHAR(1) DEFAULT NULL,
  `BOOL_PROP_2` VARCHAR(1) DEFAULT NULL,
  PRIMARY KEY (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`),
  CONSTRAINT `qrtz_simprop_triggers_ibfk_1` FOREIGN KEY (`SCHED_NAME`, `TRIGGER_NAME`, `TRIGGER_GROUP`) REFERENCES `qrtz_triggers` (`SCHED_NAME`, `TRIGGER_NAME`, `TRIGGER_GROUP`)
) ENGINE=INNODB DEFAULT CHARSET=utf8;

# 建表顺序 12 目前用不到
CREATE TABLE QRTZ_JOB_LISTENERS ( 
JOB_NAME VARCHAR(200) NOT NULL, 
JOB_GROUP VARCHAR(200) NOT NULL, 
JOB_LISTENER VARCHAR(200) NOT NULL, 
PRIMARY KEY (JOB_NAME,JOB_GROUP,JOB_LISTENER), 
FOREIGN KEY (JOB_NAME,JOB_GROUP) REFERENCES QRTZ_JOB_DETAILS(JOB_NAME,JOB_GROUP) 
) ENGINE=INNODB DEFAULT CHARSET=utf8;